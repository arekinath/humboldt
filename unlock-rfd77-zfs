#!/bin/bash
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
#

#
# Copyright (c) 2017, Joyent, Inc.
#

set -ex
set -o pipefail

. /lib/svc/share/smf_include.sh

smf_is_globalzone || exit $SMF_EXIT_OK

#
# Check that we're on a PI that has zfs encryption at all before going any
# further.
#
read _ _ encstatus _ < <(zpool get -Hp feature@encryption zones)
if [[ "z${encstatus}" == "z" ]]; then
	exit $SMF_EXIT_OK
fi

#
# Get the PIN code for the PIV applet we need to use out of our boot args
#
read pivpin < <(bootparams | awk -F= '$1 == "piv-pin" { print $2; exit(0); }')

#
# If we're in a qemu VM with the emulated CCID device, after reboot it's often
# out of sync with us. Doing a list command will cause PCSC to reset it and
# bring it back into sync.
#
pivtool list >/dev/null 2>/dev/null || true

unlock_fs() {
	local fs="$1"
	local box="$2"
	if ! try_unlock "$fs" "$box"; then
		exit $SMF_EXIT_ERROR
	fi
}

try_unlock() {
	local fs="$1"
	local box="$2"
	local opts=""
	if [[ "z${pivpin}" != "z" ]]; then
		opts="${opts} -P ${pivpin}"
	fi
	set +e
	echo "$box" | \
	    openssl enc -base64 -d | \
	    pivtool ${opts} unbox >/dev/null 2>/tmp/pivtool.err.out.$$
	set -e
	if [[ $? -eq 0 ]]; then
		echo "$box" | \
		    openssl enc -base64 -d | \
		    pivtool ${opts} unbox | \
		    zfs unlock "${fs}"
	elif [[ $? -eq 4 ]]; then
		mkfifo /tmp/pivpin.pipe.$$
		/smartdc/lib/sdc-on-tty -d /dev/console \
		    /smartdc/lib/piv-prompt-pin.sh "/tmp/pivpin.pipe.$$" \
		    "$(cat /tmp/pivtool.err.out.$$)"
		read pivpin < /tmp/pivpin.pipe.$$
		rm -f /tmp/pivpin.pipe.$$ /tmp/pivtool.err.out.$$
		try_unlock "$fs" "$box"
	fi
}

#
# Now run around any encrypted datasets on the system and unlock them.
#
zfs list -p -H -o name,encryptionroot,rfd77:local-box | \
    while read name encroot box; do
	if [[ "${name}" == "${encroot}" && "${box}" != "-" ]]; then
		unlock_fs "$name" "$box"
	fi
done

exit $SMF_EXIT_OK
